# ==============================================================
# @summary A mighty, modern linter that helps you avoid errors 
# and enforce conventions in your styles.
# @name Stylelint
# @see https://stylelint.io/
# @desc Quick tip: use Apache as editor language for syntax highlighting.
# ==============================================================
{
    "ignoreFiles": [
        "node_modules/**/*.scss",
        "src/styles/vendor/**/*.scss",
        "**/*.js",
        "**/*.md"
    ],
    "rules": {
        # ==============================================================
        # @RULE LINTING; 
        # e.g: @media, @include, etc...
        # ==============================================================
        # There must always be an empty line before at-rules.
        # -------------------------------------
        "at-rule-empty-line-before": [ "always", {
            "except": [ "after-same-name", "first-nested" ],
            "ignore": [ "after-comment", "inside-block" ]
        }],


        # Specify lowercase or uppercase for at-rules names.
        # -------------------------------------
        "at-rule-name-case": "lower",


        # Require a single space after at-rule names.
        # -------------------------------------
        "at-rule-name-space-after": "always-single-line",


        # Disallow vendor prefixes for at-rules.
        # Autoprefixer will do this for us.
        # -------------------------------------
        "at-rule-no-vendor-prefix": true,


        # There must never be a single space before the semicolons.
        # -------------------------------------
        "at-rule-semicolon-space-before": "never",




        # ==============================================================
        # BLOCKS
        # ==============================================================
        # There must always be a newline after the closing brace.
        # -------------------------------------
        "block-closing-brace-newline-after": [ "always", {
            "ignoreAtRules": [ "if", "else" ]
        }],


        # There must always be a single space before the closing brace 
        # in single-line blocks.
        # -------------------------------------
        "block-closing-brace-space-before": "always-single-line",


        # Disallow empty blocks.
        # -------------------------------------
        "block-no-empty": true,


        # There must always be a single space after the opening brace 
        # in single-line blocks.
        # -------------------------------------
        "block-opening-brace-space-after": "always-single-line",


        # There must always be a single space before the opening brace 
        # in single-line blocks.
        # -------------------------------------
        "block-opening-brace-space-before": "always-single-line",


        # Disallow invalid hex colors.
        # -------------------------------------
        "color-no-invalid-hex": true,


        # There must always be an empty line before comments.
        # -------------------------------------
        "comment-empty-line-before": [ "always", {
            "ignore": [ "stylelint-commands", "after-comment" ]
        }],


        # Disallow empty comments.
        # -------------------------------------
        "comment-no-empty": true,




        # ==============================================================
        # DECLARATIONS
        # ==============================================================
        # There must never be whitespace after the bang (!). 
        # e.g. `a { color: pink !important; }`
        # -------------------------------------
        "declaration-bang-space-after": "never",


        # There must always be a single space before the bang (!).
        # -------------------------------------
        "declaration-bang-space-before": "always",


        # Disallow duplicate properties within declaration blocks.
        # This rule ignores variables ($sass, @less, --custom-property).
        # -------------------------------------
        "declaration-block-no-duplicate-properties": true,


        # Disallow shorthand properties that override related longhand properties.
        # e.g. `a { padding-left: 10px; padding: 20px; }`
        # -------------------------------------
        "declaration-block-no-shorthand-property-overrides": true,


        # There must always be a single space after the semicolon 
        # in single-line declaration blocks.
        # -------------------------------------
        "declaration-block-semicolon-space-after": "always-single-line",


        # There must never be whitespace before the semicolons.
        # -------------------------------------
        "declaration-block-semicolon-space-before": "never",


        # Limit the number of declarations within a single line.
        # -------------------------------------
        "declaration-block-single-line-max-declarations": 1,


        # Limit the number of declarations within a single line.
        # -------------------------------------
        "declaration-block-trailing-semicolon": "always",


        # There must always be a single space after the colon.
        # -------------------------------------
        "declaration-colon-space-after": "always",


        # There must never be whitespace before the colon.
        # -------------------------------------
        "declaration-colon-space-before": "never",


        # Disallow !important within declarations.
        # -------------------------------------
        "declaration-no-important": true,


        # Disallow direction values in linear-gradient() calls that are not 
        # valid according to the standard syntax.
        # https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient#Syntax
        # -------------------------------------
        "function-linear-gradient-no-nonstandard-direction": true,


        # Always indent at-rules, rules, comments, declarations, inside 
        # parentheses, and multi-line values by 4 spaces.
        # -------------------------------------
        "indentation": 4,


        # Disallow !important within keyframe declarations.
        # -------------------------------------
        "keyframe-declaration-no-important": true,


        # Limit the number of adjacent empty lines to three.
        # -------------------------------------
        "max-empty-lines": [ 3, {
            "ignore": [ "comments" ]
        }],


        # Limit the allowed nesting depth.
        # a {
        #   & b {       // nesting depth 1
        #     & .foo {  // nesting depth 2 [max]
        #       ...
        #     }
        #   }
        # }
        # -------------------------------------
        "max-nesting-depth": [ 2, { 
            "ignoreAtRules": [ "include", "media" ]
        }],




        # ==============================================================
        # MEDIA QUERIES/FEATURES
        # ==============================================================
        # There must always be a single space after the colon, and never before.
        # e.g: @media (max-width: 600px) { ... }
        # -------------------------------------
        "media-feature-colon-space-after": "always",
        "media-feature-colon-space-before": "never",


        # @media feature names must always be lowercase.
        # e.g: @media (min-width: 700px) and (orientation: landscape) { ... }
        # -------------------------------------
        "media-feature-name-case": "lower",


        # Disallow unknown media feature names.
        # e.g: @media screen and (unknown: 10px) { ... }
        #                           ^not allowed
        # -------------------------------------
        "media-feature-name-no-unknown": true,


        # There must never be whitespace on the inside the parentheses; however,
        # when combined with our colon-space rules above, @media queries should
        # be written as such: @media (max-width: 300px) { ... }
        # -------------------------------------
        "media-feature-parentheses-space-inside": "never",


        # There must always be a single space before & after the range operator.
        # e.g: @media (width >= 600px) { ... }
        # -------------------------------------
        "media-feature-range-operator-space-after": "always",
        "media-feature-range-operator-space-before": "always",


        # There must always be a single space after, and never before,  
        # the commas of @media query lists.
        # e.g: @media screen and (color), projection and (color) { ... }
        # -------------------------------------
        "media-query-list-comma-space-after": "always",
        "media-query-list-comma-space-before": "never",


        # Disallow end-of-line whitespace.
        # -------------------------------------
        # "no-eol-whitespace": [ true, {
        #     "ignore": [ "empty-lines" ]
        # }],


        # Disallow duplicate selectors within a stylesheet.
        # -------------------------------------
        "no-duplicate-selectors": true,


        # Disallow extra semicolons.
        # -------------------------------------
        "no-extra-semicolons": true,


        # Disallow unknown animations; just make sure that your animation
        # names match up with your @keyframes names.
        # -------------------------------------
        "no-unknown-animations": true,


        # There must always be a leading zero for fractional numbers less than 1.
        # e.g: a { transform: translate(2px, 0.4px); }
        # -------------------------------------
        "number-leading-zero": "always",


        # Disallow trailing zeros in numbers; e.g: a { top: 1px } (not 1.0px)
        # -------------------------------------
        "number-no-trailing-zeros": true,


        # Properties must always be written in lowercase.
        # -------------------------------------
        "property-case": "lower",


        # Disallow unknown properties. This rule considers properties defined 
        # in the CSS Specifications & browser specific properties to be known.
        # https://github.com/betit/known-css-properties#source
        # This rule ignores variables ($sass, @less, --custom-property).
        # -------------------------------------
        "property-no-unknown": true,


        # Disallow vendor prefixes for properties.
        # -------------------------------------
        "property-no-vendor-prefix": true,


        # There must always be an empty line before rules.
        # first-nested:     Except if the rule is the first in a block.
        # after-comment:    Ignore rules that come after a comment.
        # inside-block:     Ignore rules that are inside a block.
        # -------------------------------------
        "rule-empty-line-before": [ "always", {
            "except": [ "first-nested" ],
            "ignore": [ "after-comment", "inside-block" ]
        }],




        # ==============================================================
        # SELECTOR ATTRIBUTES
        # ==============================================================
        # There must never be whitespace on the inside of brackets.
        # There must never be a single space after the operator.
        # There must never be a single space before the operator.
        # e.g: [target="_blank"] { ... }
        # ==============================================================
        "selector-attribute-brackets-space-inside": "never",
        "selector-attribute-operator-space-after": "never",
        "selector-attribute-operator-space-before": "never",


        # There must always be a single space before & after the combinators
        # and disallow non-space characters for descendant combinators of 
        # selectors. This rule ensures that only a single space is used and 
        # ensures no tabs, newlines, nor multiple spaces are used for 
        # descendant combinators of selectors.
        # -------------------------------------
        "selector-combinator-space-after": "always",
        "selector-combinator-space-before": "always",
        "selector-descendant-combinator-no-non-space": true,


        # There must always be a single space after the commas in single-line 
        # selector lists and never before.
        # -------------------------------------
        "selector-list-comma-space-after": "always-single-line",
        "selector-list-comma-space-before": "never",


        # Limit the number of compound selectors in a selector to four (4).
        # e.g: .foo .bar .baz .lorem { ... }
        #       ^    ^    ^     ^
        #       1    2    3     4
        # -------------------------------------
        "selector-max-compound-selectors": 4,


        # Limit the number of adjacent empty lines within selectors to zero (0).
        # e.g: .foo,
        #      .bar {
        #          ...
        #      }
        # -------------------------------------
        "selector-max-empty-lines": 0,


        # Limit the number of id selectors in a selector to one (1).
        # -------------------------------------
        "selector-max-id": 1,


        # Disallow qualifying a selector by type.
        # e.g: 
        #       a.foo { margin: 0; }  <= Violation
        #       .foo { margin: 0; }   <= Acceptable
        # -------------------------------------
        "selector-no-qualifying-type": true,


        # Disallow vendor prefixes for selectors.
        # Autoprefixer will do this for us.
        # -------------------------------------
        "selector-no-vendor-prefix": true,


        # Pseduo and type selectors must be written lowercase.
        # -------------------------------------
        "selector-pseudo-class-case": "lower",
        "selector-pseudo-element-case": "lower",
        "selector-type-case": "lower",


        # Disallow unknown pseudo-class and type selectors.
        # e.g: a:hoverr { ... } (mispelled throws error)
        # -------------------------------------
        "selector-pseudo-class-no-unknown": true,
        "selector-pseudo-element-no-unknown": true,
        "selector-type-no-unknown": true,


        # Strings must always be wrapped with single quotes.
        # e.g: 
        #       a { content: "x"; }   <= Violation
        #       a { content: 'x'; }   <= Acceptable
        # -------------------------------------
        "string-quotes": "single",


        # Units must always be written in lowercase.
        # e.g: 
        #       a { width: 10PX; }    <= Violation
        #       a { width: 10px; }    <= Acceptable
        # -------------------------------------
        "unit-case": "lower",


        # Disallow unknown units.
        # CSS Grid's "fr" units are ignored and therefore acceptable.
        # -------------------------------------
        "unit-no-unknown": [ true, { 
            "ignoreUnits": [ "fr" ] 
        }],


        # Disallow vendor prefixes for values.
        # Autoprefixer will do this for us.
        # -------------------------------------
        "value-no-vendor-prefix": true,
    }
}
